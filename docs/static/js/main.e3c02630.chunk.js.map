{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","console","log","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAyBhD,OAEE,sBAAMC,SAlBa,SAACC,GAEpBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,GAC9BR,GAAe,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACxCN,EAAc,MAGdA,EAAc,IACdO,QAAQC,IAAK,wCAQf,SAEE,uBACAC,KAAO,OACPC,MAAUX,EACVY,SA5BsB,SAACT,GACzBF,EAAcE,EAAEU,OAAOF,a,+BCRdG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEqCC,UAAUH,GAF/C,+DAGCI,MAAOF,GAHR,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE5B,MAAM,CAEJC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAZrB,kBAkBXM,GAlBW,4CAAH,sDCANO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAInC,OAEI,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCNAO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEhBhB,mBAAS,CACjCuB,KAAM,GACNa,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAuB1C,OAfAC,qBAAW,WAETxB,EAAQC,GACPwB,MAAM,SAAAC,GAEHH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAKd,CAAEpB,IAGEqB,EDrBwBK,CAAc1B,GAAhCyB,EAF0B,EAE/BlB,KAAWa,EAFoB,EAEpBA,QAGnB,OACE,qCACE,qBAAIJ,UAAU,yCAAd,cAAyDhB,EAAzD,OAEEoB,GAAW,mBAAGJ,UAAU,wCAAb,wBAEX,qBAAKA,UAAU,YAAf,SAGIS,EAAKhB,KAAK,SAAAC,GAAG,OACV,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEoBVgB,EAlCa,WAAO,IAAD,EAEI3C,mBAAU,CAAC,cAFf,mBAEzB4C,EAFyB,KAEb7C,EAFa,KAQhC,OAEE,qCAEA,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAGI6C,EAAWnB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAWA,GADLA,YCrBlB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e3c02630.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  };\r\n  \r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    if ( inputValue.trim().length > 2 ) {      \r\n      setCategories( categ => [inputValue, ...categ] );\r\n      setInputValue('');\r\n\r\n    }else {\r\n      setInputValue('');\r\n      console.log( 'Debe colocar al menos 3 caracteres' )\r\n    };\r\n \r\n  };\r\n\r\n\r\n  return (\r\n\r\n    <form onSubmit = { handleSubmit }>\r\n\r\n      <input \r\n      type = 'text'\r\n      value = { inputValue }   \r\n      onChange = { handleInputChange }   \r\n      />\r\n\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGif = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=K06dJNADgE98M9oiLEvhRuH3btQKtb6Q`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n      \r\n      return{\r\n\r\n        id : img.id,\r\n        title : img.title,\r\n        url : img.images?.downsized_medium.url\r\n\r\n      };\r\n\r\n    });\r\n\r\n    return gifs;\r\n\r\n  };","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n  // console.log( id, title, url );\r\n\r\n  return (\r\n\r\n      <div className='card animate__animated animate__fadeIn'>\r\n        <img src={ url } alt={ title } />\r\n        <p>{ title }</p>\r\n      </div>\r\n\r\n  )\r\n\r\n}","import React /*{useState, useEffect}*/ from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n  const { data:imgs, loading } = useFetchGifs( category );\r\n  \r\n\r\n  return (\r\n    <>\r\n      <h3 className='card animate__animated animate__fadeIn'> {category} </h3>\r\n\r\n      { loading && <p className='card animate__animated animate__flash'>Loading...</p> }\r\n\r\n        <div className='card-grid'>\r\n    \r\n          {\r\n            imgs.map( img => (\r\n               <GifGridItem\r\n               key={ img.id }\r\n               { ...img }\r\n               />\r\n            ))\r\n          }\r\n  \r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n\r\n  useEffect( () => {\r\n\r\n    getGif( category )\r\n    .then( imgs => {\r\n        \r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n\r\n    })\r\n\r\n  }, [ category ]);\r\n\r\n\r\n  return state;\r\n\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n// import PropTypes from 'prop-types';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState( ['One Punch'] );\r\n\r\n  // const handleAdd = () =>{\r\n  //   setCategories( [...categories, 'Naruto'] );\r\n  // };\r\n\r\n  return (\r\n\r\n    <>\r\n\r\n    <h2> GifExpertApp </h2>\r\n    <AddCategory setCategories={ setCategories }/>\r\n    <hr />\r\n    <ol>\r\n      {   \r\n\r\n        categories.map( category => (\r\n          <GifGrid \r\n            key={ category }\r\n            category={ category } \r\n          />\r\n        ))\r\n\r\n      }\r\n    </ol>\r\n\r\n    </>\r\n\r\n  );\r\n\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}